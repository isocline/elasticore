package ${packageName};


import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.elasticore.springboot3.mapper.Mapper;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import ${importList};

/**
 * gRPC Client class for invoking ${gRpcServiceName} service.
 *
 * This class is automatically managed and regenerated by ElastiCORE.
 * DO NOT modify this file manually, as any changes will be overwritten
 * during the next code generation cycle.
 *
 * The client handles gRPC stub initialization and delegates method calls
 * defined in the corresponding port specification.
 */
@Component
public class ${gRpcServiceName}Client {

    private final ${gRpcServiceName}Grpc.${gRpcServiceName}BlockingStub blockingStub;

    public ${gRpcServiceName}Client(@Value("${gRpcServiceIp}") String grpcSvcIp
                          ,@Value("${gRpcServicePort}") int grpcPort) {
        ManagedChannel channel = ManagedChannelBuilder
                .forAddress(grpcSvcIp, grpcPort)
                .usePlaintext()
                .build();
        blockingStub = ${gRpcServiceName}Grpc.newBlockingStub(channel);
    }

    ${gRpcMethodList}
}
