---

service:
  items:
    TestPlanService:

      methods:

        readTestPlan:
          returnType: TestPlanItemDTO
          params:
            testPlanId: String

          action: $.entity.items.TestPlan#read()



        SearchPartyInfoByPartyKey:
          opertaionType: list
          target: $.entity.Party
          input: PartyInfoByPartyKeyInputMessage
          output: PartyInfoByPartyKeyOutputMessage

          process:
            type: auto

            script:
              type: typescript
              initMethod: main
              code: |
                function main(input, output) {
                  var party = query.read("select u from CoreParty u where u.partyKey = S1", input.parkey);

                  var result= query.set("select u from CoreParty u where u.partyKey ")
                    .param("partyKey", input.partyKey)
                    .param("age", input.age)
                    .execute();

                  copy(party.PIIAddress, output.patyAddress);
                  copy(party.phoneOutput, output.phoneOutput);

                  var partyInfo = read("selPartyKey", input);
                  if(partyInfo.partyCode == '123') {

                  }

                }
            query:
              insert:
                sql: select u from CoreParty u where u.partyKey = $.input.partyKey
              getTest:
                sql: select u from CoreParty2 u where u.partyKey = $.input.partyKey




        insertMultiple:
          customize: true
          opertaionType: create
          traction: rollback

          input: PartyInfoByPartyKeyInputMessage
          output: PartyInfoByPartyKeyOutputMessage

          process:
            type: auto
            script:
              type: javascript
              code: |


            query:
              insert:
                sql: insert Person values( :input )


              getTest:
                sql: select name, age from person where age > :age and ${test}
                mappigng:
                  output:
                    PersonDTO:
                      properties:
                        namm:
                        ageYesr:

