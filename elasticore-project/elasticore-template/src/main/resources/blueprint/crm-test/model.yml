
enumeration:
  MemberGroup:
    info:
      name: MemberGroup
      desc: MemberGroup information
      author: Richard

    fields:
      name: String

    enum:
      ROL_ASSOCIATE: "준회원"
      ROLE_REGULAR: "정회원"


entity:
  ContractGroup:
    meta: entity @table('T_CNCT_GRP')
    fields:
      grpSeq: int @id @sequence @labe('그릅 일련번호') @db('GRP_SEQ')
      groupName: String @len(200) @label('그룹명') @db('GROUP_NAME')
      contactInfoList: List<ContactInfo>

  ContactInfo:
    meta: entity @table('T_CNCT_LST')
    fields:
      grpSeq: int @id  @labe('그릅 일련번호') @db('GRP_SEQ')
      contactSeq: int @id @sequence @labe('순번') @db('CTR_SEQ')
      contractName: string @len(100) @labe('이용자명') @db('CONTACT_NAME')
      contractTel: string @len(20) @labe('연락처(전화번호)') @db('contractTel')
      contractGrp: ContractGroup

dto:
  ContractGroupDTO:
    meta: dto @template(ContractGroup)
    fields:
      carSeq: int
      contrNm: string

repository:
  ContractGroup:
    methods:
      - id: selectCnctCodeList
        query: select a from ContractGroup order by grpSeq desc

  ContactInfo:
    methods:
      - id: selectCnctList
        query: select a from ContactInfo where a.grpSeq=:grpSeq order by contactSeq desc


      - id: selectCnctCustList
        return: List<Object[]>
        nativeQuery: true
        query: |
          SELECT CASE WHEN C.CAR_SEQ IS NULL THEN -1 ELSE C.CAR_SEQ END AS CAR_SEQ /* type:int */
                       , CASE WHEN B.CONTR_NM IS NULL THEN A.CONTACT_NAME ELSE B.CONTR_NM END AS CONTR_NM
                       , CASE WHEN D.CUST_NM IS NULL THEN '' ELSE D.CUST_NM END AS CUST_NM
                       , CASE WHEN B.CONTR_TEL IS NULL THEN A.CONTACT_TEL ELSE B.CONTR_TEL END AS CONTR_TEL
                       , CASE WHEN C.RENT_AMT IS NULL THEN 0 ELSE C.RENT_AMT END AS RENT_AMT /* type:int */
                       , CASE WHEN C.EXCEPT_AMT IS NULL THEN 0 ELSE C.EXCEPT_AMT END AS EXCEPT_AMT /* type:int */
                       , CASE WHEN B.PENALTY_RATE IS NULL THEN 0 ELSE B.PENALTY_RATE END AS PENALTY_RATE
                       , B.CONTRACT_NO
                       , B.DRIVER_SEQ_NO
                       , C.CUST_NO
                  FROM T_CNCT_LST A
                           LEFT OUTER JOIN T_CONTRACT B ON A.CONTRACT_NO = B.CONTRACT_NO
                           LEFT OUTER JOIN T_CAR C ON A.CONTRACT_NO = C.CONTRACT_NO
                           LEFT OUTER JOIN T_CUST D ON C.CUST_NO = D.CUST_NO
                  WHERE 1 = 1
                    AND A.GRP_SEQ = :grpSeq
                  ORDER BY A.CTR_SEQ;



