package ${packageName};

import org.springframework.dao.PermissionDeniedDataAccessException;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import org.springframework.data.jpa.domain.Specification;
import ${j2eePkgName}.persistence.criteria.Join;

import java.util.*;
import java.util.stream.Collectors;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Function;
import ${entityPackageName}.*;
import ${dtoPackageName}.*;
import ${enumPackageName}.*;

import ${importList};
import io.elasticore.runtime.security.TransformPermissionChecker;
import com.mobillug.leaserent.estimator.common.mapper.BaseMapper;

/**
 * <pre>${description}</pre>
 * hash:${hashCode}
 */

${classAnnotationList}
public class ${className} extends BaseMapper {

    private static TransformPermissionChecker permissionChecker;

    public static void setTransformPermissionChecker(TransformPermissionChecker checker) {
        permissionChecker = checker;
    }


    protected static void checkPermission(Object from, Object to) {
        if(permissionChecker !=null) {
            if( !permissionChecker.hasPermission(from, to)) {
                throw new PermissionDeniedDataAccessException(from.getClass().getName()+ " access error" ,new RuntimeException());
            }
        }
    }

    ${methodList}

}